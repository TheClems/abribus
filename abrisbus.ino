// THONAIN POUR ECRAN Oled : affiche du texte et une variable
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128     // OLED display width, in pixels
#define SCREEN_HEIGHT 64     // OLED display height, in pixels
#define OLED_RESET -1        // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C  ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
//variable
int changement = 1;
int var = 0;
int min2 = 0;
int sec2 = 0;
String zero = "";
//Variable de temps, entrer le nombre de minutes et le nombre de seconde
int min = 2;
int sec = 31;




// Image de bus qui défile
const unsigned char Bus[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x06, 0x00, 0x00,
  0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,
  0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
  0x07, 0xff, 0xff, 0xff, 0x0f, 0xff, 0x0f, 0xff, 0x0f, 0xff, 0x0f, 0xff, 0x0f, 0xff, 0x00, 0x78,
  0x0f, 0xff, 0xff, 0xff, 0x9f, 0xff, 0x9f, 0xff, 0x9f, 0xff, 0x9f, 0xff, 0x9f, 0xff, 0x80, 0xf8,
  0x19, 0xff, 0xf0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x98, 0x00, 0x81, 0x88,
  0x1b, 0xff, 0xf0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x81, 0x88,
  0x1b, 0x31, 0xb0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x81, 0x88,
  0x1b, 0x31, 0xb0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x81, 0x88,
  0x1b, 0x31, 0xb0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x81, 0x88,
  0x1b, 0x31, 0xb0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x81, 0x88,
  0x1b, 0x31, 0xb0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x81, 0x88,
  0x0f, 0x31, 0xb0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x81, 0x88,
  0x00, 0x31, 0xb0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x81, 0x88,
  0x00, 0x31, 0xb0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x90, 0x00, 0x90, 0x00, 0x90, 0x00, 0x81, 0x88,
  0x00, 0x31, 0xb0, 0x01, 0x98, 0x00, 0x98, 0x00, 0x98, 0x00, 0x98, 0x01, 0x98, 0x00, 0x80, 0x88,
  0x00, 0x31, 0xb0, 0x01, 0x8f, 0xff, 0x8f, 0xff, 0x8f, 0xff, 0x8f, 0xff, 0x8f, 0xff, 0x80, 0xf8,
  0x00, 0x31, 0xb0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
  0x00, 0x31, 0xb0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
  0x00, 0x31, 0xb0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
  0x00, 0x31, 0xb0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,
  0x00, 0x31, 0xbf, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78,
  0x00, 0x31, 0xb0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68,
  0x00, 0x31, 0xb0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8f, 0x00, 0x00, 0x48,
  0x00, 0x31, 0xb0, 0x0d, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x88, 0x00, 0x00, 0x48,
  0x00, 0x31, 0xb0, 0x0d, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbb, 0x80, 0x00, 0x48,
  0x00, 0x31, 0xb0, 0x05, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78,
  0x00, 0x31, 0xb0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78,
  0x00, 0x31, 0xb0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48,
  0x00, 0x3f, 0x30, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48,
  0x00, 0x38, 0x30, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68,
  0x00, 0x30, 0x30, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78,
  0x00, 0x30, 0x30, 0x06, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x3f, 0x80, 0x00, 0x68,
  0x00, 0x30, 0x30, 0x0d, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x7f, 0xc0, 0x00, 0x48,
  0x00, 0xfc, 0x30, 0x0b, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0xff, 0xe0, 0x00, 0x68,
  0x00, 0xc6, 0x30, 0x1f, 0x83, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x70, 0xe0, 0xf0, 0x00, 0x78,
  0x00, 0x86, 0x30, 0x17, 0x38, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xcf, 0x31, 0xce, 0x70, 0x00, 0x08,
  0x00, 0x86, 0x1f, 0xf6, 0x44, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x91, 0x91, 0x30, 0x00, 0x08,
  0x00, 0x86, 0x0f, 0xe6, 0xc2, 0xc0, 0x00, 0x00, 0x00, 0x01, 0x90, 0x91, 0xb5, 0xb0, 0x00, 0x78,
  0x00, 0xc6, 0x00, 0x06, 0x9a, 0xc0, 0x00, 0x00, 0x00, 0x01, 0x96, 0xd9, 0x24, 0xb0, 0x3f, 0xe0,
  0x00, 0x66, 0x00, 0x06, 0xc2, 0xc0, 0x00, 0x00, 0x00, 0x01, 0x90, 0x99, 0xb1, 0xbf, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xfe, 0x56, 0xff, 0xff, 0xff, 0xff, 0xff, 0x98, 0x9f, 0x95, 0x3f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x07, 0x3c, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xcf, 0x31, 0xdf, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0xe0, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0xc0, 0x7b, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x1f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup() {

  Serial.begin(9600);
  min2 = min;
  sec2 = sec;
  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;)
      ;  // Don't proceed, loop forever
  }
  display.display();
  delay(2000);  // Pause for 2 seconds
}
void loop() {

  if (changement == 1) {

    timer();
  }
  if (changement == 0) {
    prochain();
  }
}

void timer() {

  if (sec > 0) {
    sec--;
    delay(1000);
  }
  if (sec == 0) {
    sec = 59;
    min--;
  }
  if (min == 0 & sec == 1) {

    delay(1000);
    changement = 0;
    void exit();
  }
  if (sec < 10) {
    zero = "0";
  } else {
    zero = "";
  }
  display.clearDisplay();
  display.setTextColor(WHITE);
  display.setTextSize(2);
  display.setCursor(15, 0);  // position du curseur colonne / ligne
  display.println("Prochain");
  display.setCursor(45, 21);  // position du curseur colonne / ligne
  display.println("Bus");
  display.setCursor(35, 42);  // position du curseur colonne / ligne
  display.println((String) "0" + min + ":" + zero + sec);
  display.display();
}


void prochain() {

  // arrivée du bus
  for (int i = 128; i > 0; i = i - 3) {
    display.clearDisplay();
    display.drawBitmap(i, 0, Bus, 128, 64, WHITE);
    display.display();
  }

  // bus en pause
  display.clearDisplay();
  //display.setTextColor(WHITE);
  display.drawBitmap(0, 0, Bus, 128, 64, WHITE);
  display.display();
  delay(5000);

  // départ du bus
  for (int i = 0; i > -128; i = i - 3) {
    display.clearDisplay();
    display.drawBitmap(i, 0, Bus, 128, 64, WHITE);
    display.display();
  }


  sec = sec2;
  min = min2;
  changement = 1;

  display.clearDisplay();
}
